// @import .scss => styles
div(className='{styles.root}')
  //- h1 pyramid
  //- center
  //- h1 {maxCount}, {JSON.stringify(_maxCount)}
  //- pre {JSON.stringify(this.state.average, null, 2)}
  //- img(src='{imgSrc}' width="100%")
  svg(width='100%', viewBox='{"0 0 " + width + " " + height}',
    xmlns='http://www.w3.org/2000/svg')

    //- {
    //-   "men": {
    //-     "y": 690.6,
    //-     "text": 22.4
    //-   },
    //-   "women": {
    //-     "y": 682.8,
    //-     "text": 23.7
    //-   }
    //- }



    g
      path(@for='path in paths',
        d='{path.d}', stroke='black')
      Fragment(@if='xAxis')
        g(@for='eee in xAxis.tickL')
          path(d='{eee.tick}', stroke='black')
          text(x='{eee.text.x}',
            y='{eee.text.y}',
            alignmentBaseline="middle"
            textAnchor="middle"
            letterSpacing='2')
            | {eee.text.text}
        g(@for='eee in xAxis.tickR')
          path(d='{eee.tick}', stroke='black')
          text(x='{eee.text.x}',
            y='{eee.text.y}',
            alignmentBaseline="middle"
            textAnchor="middle"
            letterSpacing='2')
            | {eee.text.text}
      //- path(@if='xAxis'
        d='{xAxis.tickR.d}', stroke='black')

    //- circle(cx='50', cy='50', r='40', stroke='blue', fill='lightblue')
    g


      text(@for='(char, key, i) in yearChars',
        x='{((width - (yearChars.length - 1) * 40) / 2) + (i * 40)}', y='{115}',
        fontSize='36px',
        
        textAnchor='middle'
        alignmentBaseline="middle"
        ) {char}
        
      //- text(x='{width / 2}', y='{115}'
        fontSize='36px',
        
        textAnchor='middle'
        alignmentBaseline="middle"
      //- )
      //-   | {year}
      g
        text(@if='label'
          x='{label.yAxis1.x}', y='{label.yAxis1.y}',
          textAnchor="end"
          alignmentBaseline="middle"
          letterSpacing='2')
          | {label.yAxis1.text}
        text(@for='yAxis in yAxis1', x='{yAxis.x}', y='{yAxis.y}',
          textAnchor="end"
          alignmentBaseline="middle"
          letterSpacing='2')
          | {yAxis.text}
        path(@for='yAxis in yAxis1', d='{yAxis.tick.d}', stroke='black')
      g
        text(@if='label'
          x='{label.yAxis2.x}', y='{label.yAxis2.y}',
          textAnchor="start"
          alignmentBaseline="middle"
          letterSpacing='2')
          | {label.yAxis2.text}
        text(@for='yAxis in yAxis2', x='{yAxis.x}', y='{yAxis.y}',
          textAnchor="start"
          alignmentBaseline="middle"
          letterSpacing='2')
          | {yAxis.text}
        path(@for='yAxis in yAxis2', d='{yAxis.tick.d}', stroke='black')
      g
        text(@for='e in generations', x='{width / 2}', y='{e.y}',
          textAnchor='middle' )
          | {e.text}
          //- | {e.from}
      Fragment(@if='d')
        path(@for='e in d',
          d='{e.d}', fill='none', stroke='black', strokeWidth='{0.5}')
      Fragment(@if='d2')
        path(@for='e in d2',
          d='{e.d}', fill='none', stroke='black')
        
        //- )d='{d.pre}', fill='#07a8a7')
        //- path(d='{d.reproductive}', fill='green')
        //- path(d='{d.post}', fill='yellow')
      //- Fragment(@if='d2')
        path(d='{d2.pre}', fill='      Fragment(@if='d')
        path(@for='e in d',
          d='{e.d}', fill='green')')
        path(d='{d2.reproductive}', fill='red')
        path(d='{d2.post}', fill='#c54706')
      Fragment(@if='total')

        text(@for='(char, key, i) in total.menChars',
          x='{box.left + (i * 20) + 11}', y='{915}',
          textAnchor='middle'
          alignmentBaseline="middle"
          ) {char}

        rect(@for='(char, key, i) in total.menChars',
          x='{box.left + (i * 20)}', y='{915 - 11}',
          width='{20}',
          height='{20}',
          fill='none',
          stroke='black') {char}
          

        text(@for='(char, key, i) in total.womenChars',
          x='{580 + (i * 20)}', y='{915}',
          textAnchor='middle'
          alignmentBaseline="middle"
          ) {char}
        text(@for='(char, key, i) in total.allChars',
          x='{this.center + ((total.allChars.length - 1) * -14) + (i * 28)}', y='{915}',
          fontSize='24px',
          
          textAnchor='middle'
          alignmentBaseline="middle"
          ) {char}
    g(@if='average')
      text(x='{width / 2 + 90}', y='{average.women.y}'
        textAnchor='start'
      )
        | 평균 연령 = {average.women.text}
      text(x='{width / 2 - 90}', y='{average.men.y}'
        textAnchor='end'
      )
        | 평균 연령 = {average.men.text}    
        //- text(x='{500}', y='{100}')
          | {total.womenStr}

        //- <text x="0" y="15" fill="red">I love SVG!</text>

  div(ref='{this.rootRef}')